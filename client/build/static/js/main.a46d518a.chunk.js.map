{"version":3,"sources":["reducers/stockReducer.js","actions/types.js","reducers/index.js","store/index.js","utils/API.js","components/Searchbar/index.js","actions/index.js","components/Chart/index.js","components/TrendIcon/index.js","components/PopoutItem/index.js","components/List/index.js","components/Nav/index.js","pages/Main/Main.js","App.js","index.js"],"names":["initialState","stocks","loading","error","stockApp","state","action","type","payload","map","stock","stockTrend","lastPriceIndex","pastStats","length","price","current","console","log","symbol","filter","_id","id","combineReducers","stockReducer","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","getStockPrice","axios","get","getStocks","addStock","post","removeStock","put","connect","updateStock","useState","searchTerm","changeSearch","invalidSearch","isInvalid","addOrUpdate","stockToAdd","API","then","res","data","catch","err","stockInfo","searchSymbol","APIRes","found","find","toUpperCase","M","toast","html","checkStock","className","s","m","l","offset","name","placeholder","value","onChange","event","target","onKeyPress","persist","which","onClick","small","stockChart","chartData","forEach","stockData","moment","time","format","push","options","hAxis","title","vAxis","legend","position","chartType","width","height","TrendIcon","dispatch","a","removedStock","removedId","node","waves","tooltip","tooltipOptions","Chart","dbStocks","useEffect","accordion","key","Nav","alignLinks","brand","centerLogo","Main","Component","App","AutoInit","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a46d518a.chunk.js","sourcesContent":["import { ADD_STOCK, GET_STOCKS, STOCKS_ERROR, UPDATE_STOCK, REMOVE_STOCK } from '../actions/types';\n\nconst initialState = {\n  stocks: [],\n  loading: true,\n  error: null\n};\n\n\nconst stockApp = (state = initialState, action) => {\n\n  switch (action.type) {\n    case GET_STOCKS:\n      return {\n        ...state,\n        stocks: action.payload.map((stock) => {\n          let stockTrend = 0;\n          const lastPriceIndex = stock.pastStats.length - 2\n          if (lastPriceIndex >= 0) {\n            stockTrend = stock.price - stock.pastStats[lastPriceIndex].price;\n          }\n\n          return {\n            ...stock,\n            stockTrend\n          };\n\n        }),\n        loading: false\n      };\n    case STOCKS_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case ADD_STOCK:\n      return {\n        ...state,\n        stocks: [{\n          ...action.payload,\n          stockTrend: 0,\n          current: true\n        },\n        ...state.stocks\n        ]\n      }\n    case UPDATE_STOCK:\n      //if state already has a stock value for that symbol, updates price\n      return {\n        ...state,\n        stocks: state.stocks.map((stock) => {\n          let stockTrend = action.payload.price - stock.price;\n          console.log(stockTrend);\n\n          if (stock.symbol === action.payload.symbol) {\n            return {\n              ...stock,\n              price: action.payload.price,\n              current: true,\n              stockTrend\n            }\n          }\n          return {\n            ...stock,\n            current: false\n          };\n        })\n      };\n    case REMOVE_STOCK:\n      return {\n        ...state,\n        // eslint-disable-next-line\n        stocks: state.stocks.filter((stock) => {\n          if (stock._id !== action.id) {\n            return stock\n          }\n        })\n      }\n    default:\n      return state;\n  }\n};\n\nexport default stockApp;","export const ADD_STOCK = 'ADD_STOCK';\nexport const GET_STOCKS = 'GET_STOCKS';\nexport const UPDATE_STOCK = 'UPDATE_STOCK';\nexport const REMOVE_STOCK = 'REMOVE_STOCK';\nexport const SET_LOADING = 'SET_LOADING';\nexport const STOCKS_ERROR = 'STOCKS_ERROR';","import { combineReducers } from 'redux';\nimport stockReducer from './stockReducer';\n\nexport default combineReducers({\n  stock: stockReducer\n})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers'\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n\nexport default store;","import axios from 'axios';\n\nexport default {\n\n  getStockPrice: (symbol) => {\n    return axios.get(`https://api.iextrading.com/1.0/tops/last?symbols=${symbol}`);\n  },\n\n  getStocks: () => {\n    return axios.get('api/stocks');\n  },\n\n  addStock: (stock) => {\n    return axios.post('api/stocks', stock);\n  },\n\n  removeStock: (id) => {\n    return axios.put(`api/stocks/${id}`)\n  }\n}","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addStock, updateStock } from '../../actions';\nimport { Row, Col, TextInput, Button } from 'react-materialize';\nimport M from 'materialize-css/dist/js/materialize.min.js'\nimport './styles.css';\nimport API from '../../utils/API';\n\nconst Searchbar = ({ stock: { stocks }, addStock, updateStock }) => {\n\n\n  const [searchTerm, changeSearch] = useState(\"\");\n  const [invalidSearch, isInvalid] = useState(false);\n\n  // tells which action should be taken for stock\n  const addOrUpdate = (stockToAdd, action) => {\n    API.addStock(stockToAdd).then(res => {\n      changeSearch(\"\");\n      if (action === \"add\") {\n        addStock(res.data);\n      }\n      else {\n        updateStock(res.data)\n      }\n    }).catch(err => { console.log(err); })\n  }\n\n  // Checks to determine if stock symbol already exists and if price has changed\n  const checkStock = (searchSymbol, APIRes) => {\n    let found = stocks.find(({ symbol }) => symbol === searchSymbol.toUpperCase());\n\n    if (!!found) {\n      if (found.price === APIRes.price) {\n        M.toast({ html: `The price of ${searchSymbol.toUpperCase()} has not changed` });\n      }\n      else {\n        addOrUpdate(APIRes, \"update\");\n      }\n    }\n    else {\n      addOrUpdate(APIRes, \"add\");\n    }\n\n  }\n\n  // Gets most recent price of stock from API and calls checkStock function\n  const getStockPrice = (symbol) => {\n\n    API.getStockPrice(symbol)\n      .then((res) => {\n        let stockInfo = res.data[0];\n\n        if (stockInfo) {\n          isInvalid(false);\n          checkStock(symbol, stockInfo);\n        }\n        else {\n          isInvalid(true);\n        }\n\n      }).catch((err) => { console.log(err); })\n  };\n\n  // submits search on enter key being pressed\n  const enter = (event) => {\n    event.persist();\n    if (event.which === 13) {\n      getStockPrice(searchTerm);\n    }\n  };\n\n\n  return (\n\n    <Row className=\"searchRow\">\n\n      <Col className=\"search center\" s={12} m={8} l={6} offset=\"l3 m2\">\n\n        <TextInput s={12} name=\"ticker\" id=\"searchInput\" placeholder={\"Ticker Symbol\"} value={searchTerm} onChange={event => { changeSearch(event.target.value) }} onKeyPress={enter}></TextInput>\n        {invalidSearch ? (<label className=\"red-text inputLabel\">Invalid Ticker Symbol</label>) :\n          (<label className=\"inputLabel\">Search by ticker symbol to get latest stock price</label>)}\n      </Col>\n\n      <Col className=\"center\">\n        <Button onClick={() => getStockPrice(searchTerm)} className=\"cyan darken-4\" small={true}>Search</Button>\n      </Col>\n\n    </Row>\n\n  )\n\n}\n\nSearchbar.propTypes = {\n  stock: PropTypes.object.isRequired,\n  addStock: PropTypes.func.isRequired,\n  updateStock: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  stock: state.stock\n});\n\nexport default connect(\n  mapStateToProps,\n  { addStock, updateStock }\n)(Searchbar);","import { GET_STOCKS, ADD_STOCK, UPDATE_STOCK, REMOVE_STOCK, STOCKS_ERROR } from './types';\nimport API from '../utils/API';\n\n\n// GETS STOCKS FROM DB\nexport const getStocks = () => async dispatch => {\n\n  try {\n\n    let dbStocks = await API.getStocks();\n    let stockData = await dbStocks.data;\n    console.log(stockData);\n\n    dispatch({\n      type: GET_STOCKS,\n      payload: stockData\n    });\n  } catch (error) {\n    dispatch({\n      type: STOCKS_ERROR,\n      payload: error\n    })\n  }\n\n}\n\n// ADDS STOCK\nexport const addStock = (payload) => {\n  return { type: ADD_STOCK, payload };\n};\n\n// UPDATES STOCK'S PRICE\nexport const updateStock = (payload) => {\n  return { type: UPDATE_STOCK, payload }\n};\n\nexport const removeStock = (id) => async dispatch => {\n  try {\n    let removedStock = await API.removeStock(id);\n    let removedId = await removedStock.data._id;\n\n    dispatch({\n      type: REMOVE_STOCK,\n      id: removedId\n    })\n\n  }\n  catch (error) {\n    dispatch({\n      type: STOCKS_ERROR,\n      payload: error\n    })\n  }\n}\n\n","import React from 'react';\nimport { Chart } from 'react-google-charts';\nimport * as moment from 'moment';\n\n\nconst stockChart = ({ chartData: { symbol, pastStats } }) => {\n\n  const data = [\n    [\"Time\", \"Price\"],\n  ];\n\n  pastStats.forEach(stock => {\n    let time = moment(stock.time).format('lll');\n    let stockData = [time, stock.price];\n\n    data.push(stockData);\n  });\n\n\n  const options = {\n    hAxis: {\n      title: 'Time',\n    },\n    vAxis: {\n      title: 'Price',\n    },\n    title: `Price of ${symbol} Over Time`,\n    legend: { position: \"bottom\" },\n\n  };\n\n\n  return (\n    <Chart\n      chartType=\"LineChart\"\n      data={data}\n      options={options}\n      width=\"80%\"\n      height=\"200px\"\n    />\n  );\n\n}\n\nexport default stockChart;","import React from 'react';\nimport { Icon } from 'react-materialize';\nimport './styles.css';\n\nconst TrendIcon = ({ stockTrend }) => {\n\n  if (stockTrend > 0) {\n    return (\n      <Icon className=\"stockTrend green-text text-accent-3\">trending_up</Icon>\n    )\n  }\n  else if (stockTrend === 0) {\n    return (\n      <Icon className=\"stockTrend grey-text\">trending_flat</Icon>\n    )\n  }\n  else {\n    return (\n      <Icon className=\"stockTrend red-text text-accent-3\">trending_down</Icon>\n    )\n  }\n\n}\n\nexport default TrendIcon;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeStock } from '../../actions';\nimport PropTypes from 'prop-types';\nimport { Icon, Button } from 'react-materialize'\nimport Chart from '../Chart';\nimport TrendIcon from '../TrendIcon';\nimport './styles.css'\nimport API from '../../utils/API';\n\n\nconst PopoutItem = ({ stockData, removeStock }) => {\n  return (\n\n    <li className={`stockListItem ${stockData.current ? \"active\" : \"\"}`}>\n\n      <div className=\"collapsible-header active\">\n        <i className=\"material-icons\">show_chart</i>\n        <span className=\"stockSymbol\">\n          {stockData.symbol}\n        </span>\n        <span className=\"stockPrice indigo-text text-darken-4 secondary-content\">\n          ${stockData.price}\n\n          <TrendIcon stockTrend={stockData.stockTrend}></TrendIcon>\n        </span>\n      </div>\n\n      <div className=\"collapsible-body\">\n        <Button onClick={() => { removeStock(stockData._id, API) }}\n          className=\"red lighten-2 removeStock right\" small node=\"button\" waves=\"light\"\n          tooltip=\"Remove Stock From List\" tooltipOptions={{ position: 'left' }}>\n          <Icon>close</Icon>\n        </Button>\n        <Chart chartData={stockData}></Chart>\n        <p className=\"chartDisclaimer center\">\n          This chart is based off of values of this stock when it has been actively checked and may not be fully indicative of trends\n        </p>\n      </div>\n\n    </li>\n\n  )\n\n}\n\nPopoutItem.propTypes = {\n  removeStock: PropTypes.func.isRequired\n};\n\nexport default connect(null, { removeStock })(PopoutItem);","import React, { useEffect } from 'react';\nimport { ProgressBar, Collapsible } from 'react-materialize';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getStocks } from '../../actions';\nimport PopoutItem from '../PopoutItem';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './styles.css'\n\nconst List = ({ stock: { stocks, loading }, getStocks }) => {\n\n  useEffect(() => {\n    getStocks()\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <ProgressBar />\n  }\n\n  return (\n    <div>\n\n      <Collapsible accordion id=\"stockList\">\n        {(!loading && !stocks.length) ?\n          <h4 className=\"noStocks center\">No Stocks Yet, Search by Ticker Symbol to Get Latest Price</h4> :\n\n          (stocks.map(stock =>\n            <PopoutItem key={stock._id} stockData={stock}></PopoutItem>))\n        }\n      </Collapsible>\n\n    </div>\n  )\n}\n\nList.propTypes = {\n  stock: PropTypes.object.isRequired,\n  getStocks: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  stock: state.stock //state.stock comes from name in rootreducer\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getStocks\n  }\n)(List);","import React from 'react';\nimport { Navbar } from 'react-materialize';\n\nconst Nav = () => {\n\n  return (\n    <Navbar\n      className=\"cyan darken-4\"\n      alignLinks=\"left\"\n      brand={<span className=\"brand-logo\">STOCKEEZ</span>}\n      centerLogo\n    ></Navbar>\n  )\n\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport Searchbar from '../../components/Searchbar';\nimport List from '../../components/List';\nimport { Container } from 'react-materialize';\nimport Nav from '../../components/Nav'\n\n\nclass Main extends Component {\n\n\n  render() {\n    return (\n      <>\n        <Container>\n          <Searchbar></Searchbar>\n          <List></List>\n        </Container>\n      </>\n    )\n  };\n};\n\nexport default Main;","import React, { useEffect } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Main from './pages/Main/Main';\nimport Nav from './components/Nav';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    //initializes materialize js\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Nav></Nav>\n      <Router>\n        <Route path=\"/\" component={Main} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}